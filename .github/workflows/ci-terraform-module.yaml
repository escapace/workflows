on:
  workflow_call:
    inputs:
      node-version:
        required: true
        type: string
      pnpm-version:
        required: true
        type: string
      ref:
        required: true
        type: string
      terraform-version:
        required: true
        type: string
      tflint-version:
        required: true
        type: string
      trivy-version:
        required: true
        type: string
      version:
        required: true
        type: string

permissions:
  contents: read
  packages: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
      - name: install pnpm
        uses: pnpm/action-setup@v4.0.0
        with:
          run_install: false
          version: ${{ inputs.pnpm-version }}
      - name: get pnpm store directory
        id: pnpm-store-path
        run: echo "value=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: pnpm cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          path: ${{ steps.pnpm-store-path.outputs.value }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store
      - name: setup terrraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform-version }}
          terraform_wrapper: false
      - name: setup terraform plugin cache directory
        run: |
          echo "TF_PLUGIN_CACHE_DIR=$HOME/.terraform.d/plugin-cache" >>"$GITHUB_ENV"
          mkdir --parents "$HOME/.terraform.d/plugin-cache"
      - name: terraform plugin cache
        uses: actions/cache@v4
        with:
          key: terraform-plugin-${{ runner.os }}-${{ hashFiles('**/.terraform.lock.hcl') }}
          path: |
            ~/.terraform.d/plugin-cache
          restore-keys: |
            terraform-plugin-${{ runner.os }}-
      - name: setup tflint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: ${{ inputs.tflint-version }}
      - name: trivy setup
        uses: aquasecurity/setup-trivy@v0.2.2
        with:
          cache: true
          version: ${{ inputs.trivy-version }}
      - name: install dependencies
        run: pnpm install
      - name: typecheck
        run: pnpm run typecheck
      - name: lint
        run: pnpm run lint
