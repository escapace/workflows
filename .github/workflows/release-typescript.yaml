on:
  workflow_call:
    inputs:
      artifact-name:
        default: package
        required: false
        type: string
      enable-github-packages-npm-registry:
        default: true
        required: false
        type: boolean
      enable-npm-registry:
        default: true
        required: false
        type: boolean
      node-version:
        required: true
        type: string
    secrets:
      NPM_TOKEN:
        required: false

permissions:
  id-token: write
  packages: write

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
      - name: download package
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
      - name: install latest npm
        run: |
          npm install -g npm
          npm --version
      - name: publish to github packages npm registry
        if: inputs.enable-github-packages-npm-registry
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat << EOF > "$HOME/.npmrc"
            //npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}
            @escapace:registry=https://npm.pkg.github.com
            always-auth=true
          EOF

          while read -d '' -r file; do
            package_json=$(tar -axOf "${file}" package/package.json)

            is_private=$(echo "${package_json}" | jq -r 'if has("private") then .private else true end')
            is_scoped=$(echo "${package_json}" | jq -r 'if has("name") then (.name | startswith("@escapace/")) else false end')

            if [[ "${is_scoped}" == "true" && "${is_private}" == "false" ]]; then
              npm publish "${file}"
            fi
          done < <(find "." -type f -name '*.tgz' -not -path '**/node_modules/**' -print0 2>/dev/null)
      - name: publish to npm registry
        if: inputs.enable-npm-registry
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}
            @escapace:registry=https://registry.npmjs.org
            always-auth=true
          EOF

          while read -d '' -r file; do
            if [[ "$(tar -axOf "${file}" package/package.json | jq -r 'if has("private") then .private else true end')" == "false" ]]; then
              npm publish "${file}"
            fi
          done < <(find "." -type f -name '*.tgz' -not -path '**/node_modules/**' -print0 2>/dev/null)
