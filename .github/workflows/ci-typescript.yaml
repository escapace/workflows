on:
  workflow_call:
    inputs:
      artifact-name:
        default: package
        required: false
        type: string
      enable-artifact-upload:
        default: false
        required: false
        type: boolean
      enable-codecov:
        default: false
        required: false
        type: boolean
      enable-github-packages-npm-registry:
        default: false
        required: false
        type: boolean
      node-version:
        required: true
        type: string
      pnpm-version:
        required: true
        type: string
      ref:
        required: true
        type: string
      version:
        required: true
        type: string
    secrets:
      CODECOV_TOKEN:

permissions:
  contents: read
  packages: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
      - name: write .npmrc
        if: inputs.enable-github-packages-npm-registry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat << EOF > "$HOME/.npmrc"
            //npm.pkg.github.com/:_authToken=$GITHUB_TOKEN
            @escapace:registry=https://npm.pkg.github.com
            always-auth=true
          EOF
      - name: install pnpm
        uses: pnpm/action-setup@v4.0.0
        with:
          run_install: false
          version: ${{ inputs.pnpm-version }}
      - name: get pnpm store directory
        id: pnpm-store-path
        run: echo "value=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: pnpm cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          path: ${{ steps.pnpm-store-path.outputs.value }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store
      - name: install dependencies
        run: pnpm install
      - name: build
        run: pnpm run build
      - name: typecheck
        run: pnpm run typecheck
      - name: test
        run: pnpm run test
      - name: code coverage
        if: inputs.enable-codecov
        uses: codecov/codecov-action@v5.0.7
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: pnpm pack
        if: inputs.enable-artifact-upload
        run: pnpm run pack --version ${{ inputs.version }}
      - name: upload artifact
        if: inputs.enable-artifact-upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: |
            **/lib/*.tgz
            !**/node_modules/**
          retention-days: 3
